=begin
#Seller API

#This API reference documents endpoints that are exclusive to sellers.

The version of the OpenAPI document: v2021-01-01
Contact: support@convictional.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for ConvictionalSeller::ProductApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProductApi' do
  before do
    # run before each test
    @api_instance = ConvictionalSeller::ProductApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProductApi' do
    it 'should create an instance of ProductApi' do
      expect(@api_instance).to be_instance_of(ConvictionalSeller::ProductApi)
    end
  end

  # unit tests for delete_product_by_id
  # Delete product
  # An endpoint for deleting a product with the provided ID
  # @param product_id ID of the product to delete
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse200]
  describe 'delete_product_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_product_image_by_id
  # Delete image
  # An endpoint for deleting a product image
  # @param product_id ID of the product to be deleted from
  # @param image_id ID of the image to be deleted
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'delete_product_image_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_product_by_id
  # Get product
  # An endpoint for getting products.
  # @param product_id ID of the product to get
  # @param [Hash] opts the optional parameters
  # @return [Product]
  describe 'get_product_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_products
  # List products
  # An endpoint to get products, can be used by buyers or sellers
  # @param [Hash] opts the optional parameters
  # @option opts [String] :title Filters products by title. This can either be an exact title or a title similar.
  # @option opts [String] :vendor Filters products by brand (e.g. product.vendor field values). Must be an exact match.
  # @option opts [String] :product_code Filters products by product code. This can either be an exact product code or a product code similar.
  # @option opts [Boolean] :active Filter out products are active or not active. This field is not required.
  # @option opts [String] :company_id Filters products by seller company ID. Must be an exact match.
  # @option opts [String] :tags Filters products by tags. This is comma delimited for multiple tags. It returns products that have at any of the tags. Must be an exact match. Sellers only.
  # @option opts [Integer] :page The page number of results to return. Note this is a zero-based index.
  # @option opts [Integer] :limit The number of results per page. Max is 250.
  # @return [Array<Product>]
  describe 'get_products test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for patch_product_by_id
  # Update product
  # An endpoint for partially updating a product with the provided ID. New variants, images, and options can be created by omitting their respective _id fields.
  # @param product_id ID of the product to update
  # @param patch_product 
  # @param [Hash] opts the optional parameters
  # @return [Product]
  describe 'patch_product_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_products
  # Create product
  # An endpoint for sellers to create new products.
  # @param product All the fields in a product
  # @param [Hash] opts the optional parameters
  # @return [Product]
  describe 'post_products test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
