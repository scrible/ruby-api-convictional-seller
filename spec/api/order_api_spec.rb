=begin
#Seller API

#This API reference documents endpoints that are exclusive to sellers.

The version of the OpenAPI document: v2021-01-01
Contact: support@convictional.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for ConvictionalSeller::OrderApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'OrderApi' do
  before do
    # run before each test
    @api_instance = ConvictionalSeller::OrderApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of OrderApi' do
    it 'should create an instance of OrderApi' do
      expect(@api_instance).to be_instance_of(ConvictionalSeller::OrderApi)
    end
  end

  # unit tests for cancel_order
  # Cancel order
  # Use this endpoint to cancel an entire order. After an order is cancelled, order.hasCancellations&#x3D;true and each order item will have orderItem.cancelled&#x3D;true. Orders cannot be uncancelled afterwards. Any order can be cancelled, including flagged orders and unposted orders, as long as the order is not already fully cancelled or fully fulfilled. Partially fulfilled orders can only be cancelled if unfulfilledOnly&#x3D;true is sent. When unfulfilledOnly&#x3D;true is sent, order items that have already been fulfilled are not cancelled, and all unfulfilled order items are cancelled. If the order had no fulfillments, this endpoint behaves the same as when omitting the unfulfilledOnly flag. If the order had at least one fulfillment, then in addition to setting the cancelled status, order.shipped will be set to true and the order is now considered fully fulfilled. If an order item has been partially - but not completely - fulfilled, then that order item will be cancelled and a new uncancelled order item will be created representing the quantity that had already been fulfilled.
  # @param order_id ID of the order to cancel
  # @param authorization Auth token provided by Convictional upon account creation.
  # @param order_cancellation An object with cancellation settings
  # @param [Hash] opts the optional parameters
  # @return [Order]
  describe 'cancel_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for cancel_order_item
  # Cancel order item
  # Cancel a single order item on an order. Order items are fully cancelled by default. Order items can be partially cancelled by using the newQuantity parameter. Note that doing a partial cancellation will cancel the original order item and create a new order item representing the uncancelled quantity. Fulfilled items cannot be cancelled.
  # @param order_id ID of the order
  # @param item_id ID of the order item
  # @param authorization Auth token provided by Convictional upon account creation.
  # @param order_item_cancellation 
  # @param [Hash] opts the optional parameters
  # @return [OrderItem]
  describe 'cancel_order_item test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_order_by_id
  # Get order
  # An endpoint for getting an order.
  # @param order_id ID of the order to get
  # @param [Hash] opts the optional parameters
  # @return [Order]
  describe 'get_order_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_orders
  # List orders
  # An endpoint for getting orders.
  # @param authorization Auth token provided by Convictional upon account creation.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page The page number of resources to return.
  # @option opts [Integer] :limit The number of resources to return.
  # @option opts [Boolean] :shipped Return orders that are marked as shipped.
  # @option opts [Boolean] :posted Return orders that are synced to the seller.
  # @option opts [Boolean] :billed Return orders that are marked as billed/invoiced.
  # @option opts [Boolean] :refunded Return orders that are marked as refunded.
  # @option opts [String] :created_min Return resources created after a given time. Use RFC 3339 format.
  # @return [Array<Order>]
  describe 'get_orders test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for invoice_order
  # Create invoice
  # Creates an invoice for the given order ID for manual billing. Currently for taxes, we support only &#x60;GS&#x60; (Goods &amp; Services Tax) and &#x60;SP&#x60; (State/Provincial Sales Tax) values for &#x60;Type&#x60;. Invoices are only able to be generated after the order has been shipped. 
  # @param order_id ID of the order to invoice
  # @param authorization Auth token provided by Convictional upon account creation.
  # @param seller_order_invoice_tax An object with tax specific settings for the invoice
  # @param [Hash] opts the optional parameters
  # @return [SellerInvoiceResponse]
  describe 'invoice_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for post_fulfillment
  # Create fulfillment
  # An endpoint for creating fulfillments on orders. Order items that have been cancelled cannot be fulfilled.
  # @param order_id ID of the order with the new fulfillment
  # @param order_fulfillment An object containing fulfillment details
  # @param [Hash] opts the optional parameters
  # @return [InlineResponse2003]
  describe 'post_fulfillment test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for refund_order
  # Create refund
  # Use this endpoint to add a refund to an existing order. This will add a new entry to the &#x60;refunds&#x60; array on the order object. If &#x60;cancelUnfulfilled&#x60; is set to true, then any item that is being refunded and is not already shipped will be cancelled as well as refunded. **Note that this endpoint does not currently handle return shipping or refund payout.
  # @param order_id ID of the order to refund
  # @param authorization Auth token provided by Convictional upon account creation.
  # @param seller_order_refund An object with refund settings
  # @param [Hash] opts the optional parameters
  # @return [SellerOrderRefund]
  describe 'refund_order test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_order_by_id
  # Update order
  # An endpoint for partially updating orders.
  # @param order_id ID of the order to update
  # @param order_update The order fields to update
  # @param [Hash] opts the optional parameters
  # @return [Order]
  describe 'update_order_by_id test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
