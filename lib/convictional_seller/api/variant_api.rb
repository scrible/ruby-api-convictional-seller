=begin
#Seller API

#This API reference documents endpoints that are exclusive to sellers.

The version of the OpenAPI document: v2021-01-01
Contact: support@convictional.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0-SNAPSHOT

=end

require 'cgi'

module ConvictionalSeller
  class VariantApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Update variant
    # An endpoint for partially updating a product variant with the provided ID
    # @param product_id [String] ID of the product to update
    # @param variant_id [String] ID of the variant to update
    # @param patch_variant [PatchVariant] 
    # @param [Hash] opts the optional parameters
    # @return [Variant]
    def patch_variant_by_id(product_id, variant_id, patch_variant, opts = {})
      data, _status_code, _headers = patch_variant_by_id_with_http_info(product_id, variant_id, patch_variant, opts)
      data
    end

    # Update variant
    # An endpoint for partially updating a product variant with the provided ID
    # @param product_id [String] ID of the product to update
    # @param variant_id [String] ID of the variant to update
    # @param patch_variant [PatchVariant] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Variant, Integer, Hash)>] Variant data, response status code and response headers
    def patch_variant_by_id_with_http_info(product_id, variant_id, patch_variant, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: VariantApi.patch_variant_by_id ...'
      end
      # verify the required parameter 'product_id' is set
      if @api_client.config.client_side_validation && product_id.nil?
        fail ArgumentError, "Missing the required parameter 'product_id' when calling VariantApi.patch_variant_by_id"
      end
      # verify the required parameter 'variant_id' is set
      if @api_client.config.client_side_validation && variant_id.nil?
        fail ArgumentError, "Missing the required parameter 'variant_id' when calling VariantApi.patch_variant_by_id"
      end
      # verify the required parameter 'patch_variant' is set
      if @api_client.config.client_side_validation && patch_variant.nil?
        fail ArgumentError, "Missing the required parameter 'patch_variant' when calling VariantApi.patch_variant_by_id"
      end
      # resource path
      local_var_path = '/products/{productId}/variants/{variantId}'.sub('{' + 'productId' + '}', CGI.escape(product_id.to_s)).sub('{' + 'variantId' + '}', CGI.escape(variant_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(patch_variant)

      # return_type
      return_type = opts[:debug_return_type] || 'Variant'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['ApiKeyAuth']

      new_options = opts.merge(
        :operation => :"VariantApi.patch_variant_by_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: VariantApi#patch_variant_by_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
